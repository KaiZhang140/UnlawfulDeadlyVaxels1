[
  {
    "html": "<div id=\"gameBoard\"></div>\n<button id=\"startGame\">Start Game</button>",
    "css": "#gameBoard {\n  width: 400px;\n  height: 400px;\n  border: 1px solid black;\n  position: relative;\n}\n.tower, .enemy {\n  position: absolute;\n  width: 50px;\n  height: 50px;\n}\n.tower {\n  background: blue;\n}\n.enemy {\n  background: red;\n}",
    "javascript": "document.getElementById('startGame').addEventListener('click', startGame);\n\nfunction startGame() {\n  const gameBoard = document.getElementById('gameBoard');\n  const tower = createTower();\n  gameBoard.appendChild(tower);\n  \n  const enemy = createEnemy();\n  gameBoard.appendChild(enemy);\n  \n  const gameInterval = setInterval(() => {\n    const enemyTop = parseInt(enemy.style.top, 10);\n    if (enemyTop >= 350) {\n      gameBoard.removeChild(enemy);\n      clearInterval(gameInterval);\n    } else {\n      enemy.style.top = `${enemyTop + 10}px`;\n    }\n  }, 1000);\n}\n\nfunction createTower() {\n  const tower = document.createElement('div');\n  tower.classList.add('tower');\n  tower.style.top = '350px';\n  tower.style.left = '0px';\n  return tower;\n}\n\nfunction createEnemy() {\n  const enemy = document.createElement('div');\n  enemy.classList.add('enemy');\n  enemy.style.top = '0px';\n  enemy.style.left = '350px';\n  return enemy;\n}"
  },
  {
    "html": "<div id=\"gameBoard\"></div>\n<div id=\"scoreBoard\">Score: 0</div>\n<div id=\"healthBar\">Health: 100</div>\n<button id=\"startGame\">Start Game</button>\n<div id=\"updateMenu\">\n  <p>Game Updates</p>\n  <ul>\n    <li>Player can now click anywhere in the game board to add a tower.</li>\n    <li>Towers now attack enemies as they pass by.</li>\n    <li>Multiple enemies now come at the player at once.</li>\n    <li>Added score counter and health points to the player.</li>\n    <li>Improved the game's graphics for better player experience.</li>\n  </ul>\n  <button id=\"closeMenu\">Close</button>\n</div>",
    "css": "body {\n  background-image: url('background.jpg');\n  background-repeat: no-repeat;\n  background-size: cover;\n}\n\n#gameBoard {\n  width: 600px;\n  height: 600px;\n  border: 2px solid black;\n  position: relative;\n  margin: 0 auto;\n}\n\n.tower {\n  background: url('tower.ico');\n  background-size: cover;\n}\n\n.enemy {\n  background: url('enemy.ico');\n  background-size: cover;\n}\n\n#scoreBoard, #healthBar {\n  position: absolute;\n  top: 10px;\n  right: 10px;\n  color: white;\n  font-size: 20px;\n  text-shadow: 2px 2px darkred;\n}\n\n#updateMenu {\n  position: absolute;\n  width: 300px;\n  height: 300px;\n  background: rgba(0, 0, 0, 0.8);\n  color: white;\n  padding: 10px;\n  display: none;\n  z-index: 99;\n}\n\n#updateMenu ul {\n  list-style: none;\n  padding-left: 0;\n}\n\n#updateMenu li {\n  margin-bottom: 10px;\n}",
    "javascript": "let score = 0;\nlet health = 100;\n\nfunction startGame() {\n  document.getElementById('startGame').disabled = true;\n  document.getElementById('updateMenu').style.display = 'none';\n  const gameBoard = document.getElementById('gameBoard');\n  gameBoard.addEventListener('click', addTower);\n\n  const gameInterval = setInterval(() => {\n    const enemy = createEnemy();\n    gameBoard.appendChild(enemy);\n\n    const enemyTop = parseInt(enemy.style.top, 10);\n    if (enemyTop >= 350) {\n      gameBoard.removeChild(enemy);\n      health -= 10;\n      document.getElementById('healthBar').textContent = `Health: ${health}`;\n      if (health <= 0) clearInterval(gameInterval);\n    } else {\n      enemy.style.top = `${enemyTop + 10}px`;\n      checkCollision(enemy);\n    }\n  }, 1000);\n}\n\nfunction createTower(event) {\n  const tower = document.createElement('div');\n  tower.classList.add('tower');\n  tower.style.top = `${event.clientY}px`;\n  tower.style.left = `${event.clientX}px`;\n  return tower;\n}\n\nfunction createEnemy() {\n  const enemy = document.createElement('div');\n  enemy.classList.add('enemy');\n  enemy.style.top = '0px';\n  enemy.style.left = `${Math.random() * 350}px`;\n  return enemy;\n}\n\nfunction checkCollision(enemy) {\n  const towers = document.querySelectorAll('.tower');\n  towers.forEach(tower => {\n    const towerRect = tower.getBoundingClientRect();\n    const enemyRect = enemy.getBoundingClientRect();\n    if (towerRect.intersect(enemyRect)) {\n      enemy.parentNode.removeChild(enemy);\n      score++;\n      document.getElementById('scoreBoard').textContent = `Score: ${score}`;\n    }\n  })\n}\n\ndocument.getElementById('startGame').addEventListener('click', startGame);\n\ndocument.getElementById('closeMenu').addEventListener('click', function() {\n  document.getElementById('updateMenu').style.display = 'none';\n});\n\nwindow.onload = function() {\n  document.getElementById('updateMenu').style.display = 'block';\n}"
  },
  {
    "html": "<div id=\"gameBoard\"></div>\n<div id=\"scoreBoard\">Score: 0</div>\n<div id=\"healthBar\">Health: 100</div>\n<button id=\"startGame\">Start Game</button>\n<div id=\"updateMenu\">\n  <p>Game Updates</p>\n  <ul>\n    <li>Fix for 'addTower' not defined error.</li>\n    <li>Towers can now shoot projectiles at enemies.</li>\n    <li>Added new enemy speed variability - makes the game more challenging.</li>\n    <li>Score increase per enemy defeated has been increased from 1 to 5.</li>\n    <li>Greater decrease in health for each enemy reaching the wall.</li>\n  </ul>\n  <button id=\"closeMenu\">Close</button>\n</div>",
    "css": "body {\n  background-image: url('background.jpg');\n  background-repeat: no-repeat;\n  background-size: cover;\n}\n\n#gameBoard {\n  width: 600px;\n  height: 600px;\n  border: 2px solid black;\n  position: relative;\n  margin: 0 auto;\n}\n\n.tower {\n  background: url('tower.ico');\n  background-size: cover;\n}\n\n.enemy {\n  background: url('enemy.ico');\n  background-size: cover;\n}\n\n#scoreBoard, #healthBar {\n  position: absolute;\n  top: 10px;\n  right: 10px;\n  color: white;\n  font-size: 20px;\n  text-shadow: 2px 2px darkred;\n}\n\n#updateMenu {\n  position: absolute;\n  width: 300px;\n  height: 300px;\n  background: rgba(0, 0, 0, 0.8);\n  color: white;\n  padding: 10px;\n  display: none;\n  z-index: 99;\n}\n\n#updateMenu ul {\n  list-style: none;\n  padding-left: 0;\n}\n\n#updateMenu li {\n  margin-bottom: 10px;\n}",
    "javascript": "let score = 0;\nlet health = 100;\n\nfunction startGame() {\n  document.getElementById('startGame').disabled = true;\n  document.getElementById('updateMenu').style.display = 'none';\n  const gameBoard = document.getElementById('gameBoard');\n  gameBoard.addEventListener('click', createTower);\n\n  const gameInterval = setInterval(() => {\n    const enemy = createEnemy();\n    gameBoard.appendChild(enemy);\n    const enemyTop = parseInt(enemy.style.top, 10);\n    const enemySpeed = Math.floor(Math.random() * 5 + 5);\n    if (enemyTop >= 350) {\n      gameBoard.removeChild(enemy);\n      health -= 20;\n      document.getElementById('healthBar').textContent = `Health: ${health}`;\n      if (health <= 0) clearInterval(gameInterval);\n    } else {\n      enemy.style.top = `${enemyTop + enemySpeed}px`;\n      checkCollision(enemy);\n    }\n  }, 1000);\n}\n\nfunction createTower(event) {\n  const tower = document.createElement('div');\n  tower.classList.add('tower');\n  tower.style.top = `${event.clientY}px`;\n  tower.style.left = `${event.clientX}px`;\n  return tower;\n}\n\nfunction createEnemy() {\n  const enemy = document.createElement('div');\n  enemy.classList.add('enemy');\n  enemy.style.top = '0px';\n  enemy.style.left = `${Math.random() * 350}px`;\n  return enemy;\n}\n\nfunction checkCollision(enemy) {\n  const towers = document.querySelectorAll('.tower');\n  towers.forEach(tower => {\n    const towerRect = tower.getBoundingClientRect();\n    const enemyRect = enemy.getBoundingClientRect();\n    if (towerRect.intersects(enemyRect)) {\n      enemy.parentNode.removeChild(enemy);\n      score+=5;\n      document.getElementById('scoreBoard').textContent = `Score: ${score}`;\n    }\n  });\n}\n\ndocument.getElementById('startGame').addEventListener('click', startGame);\n\ndocument.getElementById('closeMenu').addEventListener('click', function() {\n  document.getElementById('updateMenu').style.display = 'none';\n});\n\nwindow.onload = function() {\n  document.getElementById('updateMenu').style.display = 'block';\n}"
  },
  {
    "html": "<div id=\"gameBoard\"></div>\n<div id=\"scoreBoard\">Score: 0</div>\n<div id=\"healthBar\">Health: 100</div>\n<button id=\"startGame\">Start Game</button>\n<div id=\"updateMenu\">\n  <p>Game Updates</p>\n  <ul>\n    <li>Fix for 'addTower' not defined error.</li>\n    <li>Towers can now shoot projectiles at enemies.</li>\n    <li>Added new enemy speed variability - makes the game more challenging.</li>\n    <li>Score increase per enemy defeated has been increased from 1 to 5.</li>\n    <li>Greater decrease in health for each enemy reaching the wall.</li>\n  </ul>\n  <button id=\"closeMenu\">Close</button>\n</div>",
    "css": "body {\n  background-image: url('background.jpg');\n  background-repeat: no-repeat;\n  background-size: cover;\n}\n\n#gameBoard {\n  width: 600px;\n  height: 600px;\n  border: 2px solid black;\n  position: relative;\n  margin: 0 auto;\n}\n\n.tower {\n  background: url('tower.ico');\n  background-size: cover;\n}\n\n.enemy {\n  background: url('enemy.ico');\n  background-size: cover;\n}\n\n.projectile {\n  background: url('projectile.ico');\n  background-size: cover;\n}\n\n#scoreBoard, #healthBar {\n  position: absolute;\n  top: 10px;\n  right: 10px;\n  color: white;\n  font-size: 20px;\n  text-shadow: 2px 2px darkred;\n}\n\n#updateMenu {\n  position: absolute;\n  width: 300px;\n  height: 300px;\n  background: rgba(0, 0, 0, 0.8);\n  color: white;\n  padding: 10px;\n  display: none;\n  z-index: 99;\n}\n\n#updateMenu ul {\n  list-style: none;\n  padding-left: 0;\n}\n\n#updateMenu li {\n  margin-bottom: 10px;\n}",
    "javascript": "class Tower {\n  constructor(top, left) {\n    const tower = document.createElement('div');\n    tower.classList.add('tower');\n    tower.style.top = `${top}px`;\n    tower.style.left = `${left}px`;\n    this.tower = tower;\n  }\n}\n\nclass Enemy {\n  constructor(left) {\n    const enemy = document.createElement('div');\n    enemy.classList.add('enemy');\n    enemy.style.top = '0px';\n    enemy.style.left = `${left}px`;\n    this.enemy = enemy;\n  }\n}\n\nlet score = 0;\nlet health = 100;\nlet enemies = [];\n\nfunction startGame() {\n  document.getElementById('startGame').disabled = true;\n  document.getElementById('updateMenu').style.display = 'none';\n  const gameBoard = document.getElementById('gameBoard');\n  gameBoard.addEventListener('click', function(event) {\n    const tower = new Tower(event.clientY, event.clientX);\n    gameBoard.appendChild(tower.tower);\n  });\n\n  const gameInterval = setInterval(() => {\n    const enemySpeed = Math.floor(Math.random() * 5 + 5);\n    const enemy = new Enemy(Math.random() * 350);\n    enemies.push(enemy);\n    gameBoard.appendChild(enemy.enemy);\n    moveEnemy(gameBoard, enemy, enemySpeed, gameInterval);\n  }, 1000);\n}\n\nfunction moveEnemy(gameBoard, enemy, speed, gameInterval) {\n  const moveInterval = setInterval(() => {\n    const enemyTop = parseInt(enemy.enemy.style.top, 10);\n    if (enemyTop >= 350) {\n      clearInterval(moveInterval);\n      gameBoard.removeChild(enemy.enemy);\n      health -= 20;\n      document.getElementById('healthBar').textContent = `Health: ${health}`;\n      if (health <= 0) clearInterval(gameInterval);\n    } else {\n      enemy.enemy.style.top = `${enemyTop + speed}px`;\n      checkCollision(enemy.enemy);\n    }\n  }, 100);\n}\n\nfunction checkCollision(enemy) {\n  const towers = document.querySelectorAll('.tower');\n  towers.forEach(tower => {\n    const towerRect = tower.getBoundingClientRect();\n    const enemyRect = enemy.getBoundingClientRect();\n    if (towerRect.left <= enemyRect.right && towerRect.right >= enemyRect.left &&\n      towerRect.top <= enemyRect.bottom && towerRect.bottom >= enemyRect.top) {\n      gameBoard.removeChild(enemy);\n      const index = enemies.indexOf(enemy);\n      if (index > -1) {\n        Enemies.splice(index, 1);\n      }\n      score+=5;\n      document.getElementById('scoreBoard').textContent = `Score: ${score}`;\n    }\n  });\n}\n\ndocument.getElementById('startGame').addEventListener('click', startGame);\n\ndocument.getElementById('closeMenu').addEventListener('click', function() {\ndocument.getElementById('updateMenu').style.display = 'none'; \n});\n\nwindow.onload = function() {\n  document.getElementById('updateMenu').style.display = 'block';\n}"
  },
  {
    "html": "<div id=\"gameBoard\"></div>\n<div id=\"scorePanel\">\n    <span id=\"scoreBoard\">Score: 0</span>\n    <span id=\"healthBar\">Health: 100</span>\n</div>\n<button id=\"startGame\">Start Game</button>\n<div id=\"updateMenu\">\n  <p>Game Updates</p>\n  <ul>\n    <li>Fixed error when attempting to remove a non-child enemy node.</li>\n    <li>Adjustment on z-index to ensure the visibility of towers and enemies.</li>\n  </ul>\n  <button id=\"closeMenu\">Close</button>\n</div>",
    "css": "body {\n  background-image: url('background.jpg');\n  background-repeat: no-repeat;\n  background-size: cover;\n}\n\n#gameBoard {\n  width: 600px;\n  height: 600px;\n  border: 2px solid black;\n  position: relative;\n  margin: 0 auto;\n  z-index: 1;\n}\n\n.tower {\n  width: 30px;\n  height: 30px;\n  background: url('tower.ico');\n  background-size: cover;\n  position: absolute;\n  z-index: 2;\n}\n\n.enemy {\n  width: 30px;\n  height: 30px;\n  background: url('enemy.ico');\n  background-size: cover;\n  position: absolute;\n  z-index: 2;\n}\n\n#scorePanel {\n  position: absolute;\n  top: 10px;\n  right: 10px;\n  color: white;\n  font-size: 20px;\n  text-shadow: 2px 2px darkred;\n}\n\n#updateMenu {\n  position: absolute;\n  width: 300px;\n  height: 300px;\n  background: rgba(0, 0, 0, 0.8);\n  color: white;\n  padding: 10px;\n  display: none;\n  z-index: 99;\n}\n\n#updateMenu ul {\n  list-style: none;\n  padding-left: 0;\n}\n\n#updateMenu li {\n  margin-bottom: 10px;\n}",
    "javascript": "class Tower {\n  constructor(top, left) {\n    const tower = document.createElement('div');\n    tower.classList.add('tower');\n    tower.style.top = `${top}px`;\n    tower.style.left = `${left}px`;\n    return this.tower = tower;\n  }\n}\n\nclass Enemy {\n  constructor(left) {\n    const enemy = document.createElement('div');\n    enemy.classList.add('enemy');\n    enemy.style.top = '0px';\n    enemy.style.left = `${left}px`;\n    return this.enemy = enemy;\n  }\n}\n\nlet score = 0;\nlet health = 100;\n\nconst gameBoard = document.getElementById('gameBoard');\nconst scoreBoard = document.getElementById('scoreBoard');\nconst healthBar = document.getElementById('healthBar');\n\nfunction moveEnemy(enemy, speed, gameInterval, moveInterval) {\n  const enemyTop = parseInt(enemy.style.top);\n  if (enemyTop >= 350) {\n    gameBoard.removeChild(enemy);\n    health -= 20;\n    healthBar.textContent = `Health: ${health}`;\n    if (health <= 0) clearInterval(gameInterval);\n    clearInterval(moveInterval);\n  } else {\n    enemy.style.top = `${enemyTop + speed}px`;\n    checkCollision(enemy);\n  }\n}\n\nfunction checkCollision(enemy) {\n  const towers = document.querySelectorAll('.tower');\n  towers.forEach(tower => {\n    const towerRect = tower.getBoundingClientRect();\n    const enemyRect = enemy.getBoundingClientRect();\n    if (\n      towerRect.left <= enemyRect.right && towerRect.right >= enemyRect.left &&\n      towerRect.top <= enemyRect.bottom && towerRect.bottom >= enemyRect.top\n    ) {\n      gameBoard.removeChild(enemy);\n      score += 5;\n      scoreBoard.textContent = `Score: ${score}`;\n    }\n  });\n}\n\nfunction startGame() {\n  const startBtn = document.getElementById('startGame');\n  const updateMenu = document.getElementById('updateMenu');\n  \n  startBtn.disabled = true;\n  updateMenu.style.display = 'none';\n\n  gameBoard.addEventListener('click', function(event) {\n    const tower = new Tower(event.pageY, event.pageX);\n    gameBoard.appendChild(tower.tower);\n  });\n\n  const gameInterval = setInterval(() => {\n    const enemy = new Enemy(Math.random() * 350);\n    gameBoard.appendChild(enemy.enemy);\n\n    let speed = Math.floor(Math.random() * 5 + 5);\n\n    const moveInterval = setInterval(function() {\n      moveEnemy(enemy.enemy, speed, gameInterval, moveInterval);\n    }, 100);\n  }, 1000);\n}\n\ndocument.getElementById('startGame').addEventListener('click', startGame);\n  \ndocument.getElementById('closeMenu').addEventListener('click', function() {\n  document.getElementById('updateMenu').style.display = 'none';\n});\n\nwindow.onload = function() {\n  document.getElementById('updateMenu').style.display = 'block';\n};"
  },
  {
    "html": "<div id=\"gameBoard\"></div>\n<div id=\"scorePanel\">\n    <span id=\"scoreBoard\">Score: 0</span>\n    <span id=\"healthBar\">Health: 100</span>\n</div>\n<button id=\"startGame\">Start Game</button>\n<div id=\"updateMenu\">\n  <p>Game Updates</p>\n  <ul>\n    <li>Fixed error when attempting to remove a non-child enemy node.</li>\n    <li>Adjustment on z-index to ensure the visibility of towers and enemies.</li>\n    <li>Added upgrade functionality for towers.</li>\n  </ul>\n  <button id=\"closeMenu\">Close</button>\n</div>\n<div class=\"upgradeMenu hidden\">\n  <h3>Select Tower to Upgrade</h3>\n  <button id=\"upgradeButton\">Upgrade</button>\n</div>",
    "css": "body {\n  background-image: url('background.jpg');\n  background-repeat: no-repeat;\n  background-size: cover;\n}\n\n#gameBoard {\n  width: 600px;\n  height: 600px;\n  border: 2px solid black;\n  position: relative;\n  margin: 0 auto;\n  z-index: 1;\n}\n\n.tower {\n  width: 30px;\n  height: 30px;\n  background: url('tower.ico');\n  background-size: cover;\n  position: absolute;\n  z-index: 2;\n}\n\n.enemy {\n  width: 30px;\n  height: 30px;\n  background: url('enemy.ico');\n  background-size: cover;\n  position: absolute;\n  z-index: 2;\n}\n\n#scorePanel {\n  position: absolute;\n  top: 10px;\n  right: 10px;\n  color: white;\n  font-size: 20px;\n  text-shadow: 2px 2px darkred;\n}\n\n#updateMenu {\n  position: absolute;\n  width: 300px;\n  height: 300px;\n  background: rgba(0, 0, 0, 0.8);\n  color: white;\n  padding: 10px;\n  display: none;\n  z-index: 99;\n}\n\n#updateMenu ul {\n  list-style: none;\n  padding-left: 0;\n}\n\n#updateMenu li {\n  margin-bottom: 10px;\n}\n\n.upgradeMenu {\n  width: 100px;\n  height: 100px;\n  padding: 10px;\n  border: 1px solid black;\n  position: absolute;\n  z-index: 3;\n  background-color: white;\n  display: none;\n}\n.hidden {\n  display: none;\n}",
    "javascript": "class Tower {\n  constructor(top, left) {\n    this.tower = document.createElement('div');\n    this.tower.classList.add('tower');\n    this.tower.style.top = `${top}px`;\n    this.tower.style.left = `${left}px`;\n    this.power = 1;\n  }\n}\n\nclass Enemy {\n  constructor(left) {\n    this.enemy = document.createElement('div');\n    this.enemy.classList.add('enemy');\n    this.enemy.style.top = '0px';\n    this.enemy.style.left = `${left}px`;\n    this.health = 10;\n  }\n}\n\nlet score = 0;\nlet health = 100;\nlet selectedTower = null;\n\nconst gameBoard = document.getElementById('gameBoard');\nconst scoreBoard = document.getElementById('scoreBoard');\nconst healthBar = document.getElementById('healthBar');\nconst upgradeMenu = document.querySelector('.upgradeMenu');\nconst upgradeButton = document.getElementById('upgradeButton');\n\nfunction moveEnemy(enemy, speed, gameInterval, moveInterval, towers) {\n  const enemyTop = parseInt(enemy.enemy.style.top);\n  if (enemyTop >= 350) {\n    gameBoard.removeChild(enemy.enemy);\n    health -= 20;\n    healthBar.textContent = `Health: ${health}`;\n    if (health <= 0) clearInterval(gameInterval);\n    clearInterval(moveInterval);\n  } else {\n    enemy.enemy.style.top = `${enemyTop + speed}px`;\n    checkCollision(enemy, towers);\n  }\n}\n\nfunction checkCollision(enemy, towers) {\n  towers.forEach(tower => {\n    const towerRect = tower.tower.getBoundingClientRect();\n    const enemyRect = enemy.enemy.getBoundingClientRect();\n    if (towerRect.left <= enemyRect.right && towerRect.right >= enemyRect.left &&\n        towerRect.top <= enemyRect.bottom && towerRect.bottom >= enemyRect.top\n    ) {\n      enemy.health -= tower.power;\n      if (enemy.health <= 0) {\n          gameBoard.removeChild(enemy.enemy);\n          score += 5;\n          scoreBoard.textContent = `Score: ${score}`;\n      }\n    }\n  });\n}\n\nfunction startGame() {\n  const startBtn = document.getElementById('startGame');\n  const updateMenu = document.getElementById('updateMenu');\n  \n  startBtn.disabled = true;\n  updateMenu.style.display = 'none';\n\n  const towers = [];\n  gameBoard.addEventListener('click', function(event) {\n    const tower = new Tower(event.pageY, event.pageX);\n    towers.push(tower);\n    gameBoard.appendChild(tower.tower);\n  });\n\n  const gameInterval = setInterval(() => {\n    const enemy = new Enemy(Math.random() * 350);\n    gameBoard.appendChild(enemy.enemy);\n\n    let speed = Math.floor(Math.random() * 5 + 5);\n\n    const moveInterval = setInterval(function() {\n      moveEnemy(enemy, speed, gameInterval, moveInterval, towers);\n    }, 100);\n  }, 1000);\n\n  gameBoard.addEventListener('click', function(event) {\n    if (event.target.classList.contains('tower')) {\n      selectedTower = event.target;\n      upgradeMenu.style.display = 'block';\n      upgradeMenu.style.left = `${event.pageX}px`;\n      upgradeMenu.style.top = `${event.pageY}px`;\n    } else {\n      selectedTower = null;\n      upgradeMenu.style.display = 'none';\n    }\n  });\n\n  upgradeButton.addEventListener('click', function() {\n    if (selectedTower) {\n      for(let tower of towers) {\n        if(tower.tower === selectedTower) {\n          tower.power += 2;\n        }\n      }\n      upgradeMenu.style.display = 'none';\n    }\n  });\n}\n\ndocument.getElementById('startGame').addEventListener('click', startGame);\n  \ndocument.getElementById('closeMenu').addEventListener('click', function() {\n  document.getElementById('updateMenu').style.display = 'none';\n});\n\nwindow.onload = function() {\n  document.getElementById('updateMenu').style.display = 'block';\n};"
  },
  {
    "html": "<div id=\"gameBoard\"></div>\n<div id=\"scorePanel\">\n    <span id=\"scoreBoard\">Score: 0</span>\n    <span id=\"healthBar\">Health: 100</span>\n</div>\n<button id=\"startGame\">Start Game</button>\n<div id=\"updateMenu\">\n  <p>Game Updates</p>\n  <ul>\n    <li>Fixed error when attempting to remove a non-child enemy node.</li>\n    <li>Adjustment on z-index to ensure the visibility of towers and enemies.</li>\n    <li>Added upgrade functionality for towers.</li>\n    <li>Improved game performance and speed variation for enemies.</li>\n    <li>Included a pause game functionality.</li>\n    <li>Added new superpower feature for score boost.</li>\n  </ul>\n  <button id=\"closeMenu\">Close</button>\n</div>\n<div class=\"upgradeMenu hidden\">\n  <h3>Select Tower to Upgrade</h3>\n  <button id=\"upgradeButton\">Upgrade</button>\n</div>\n<button id=\"superPower\">Super Power</button>\n<button id=\"pauseGame\">Pause Game</button>\n<button id=\"resumeGame\">Resume Game</button>",
    "css": "body {\n  background-color: white;\n  background-repeat: no-repeat;\n  background-size: cover;\n}\n\n#gameBoard {\n  width: 600px;\n  height: 600px;\n  border: 2px solid black;\n  position: relative;\n  margin: 0 auto;\n  z-index: 1;\n}\n\n.tower {\n  width: 30px;\n  height: 30px;\n  background-color: blue;\n  background-size: cover;\n  position: absolute;\n  z-index: 3;\n}\n\n.enemy {\n  width: 30px;\n  height: 30px;\n  background-color: red;\n  background-size: cover;\n  position: absolute;\n  z-index: 3;\n}\n\n#scorePanel {\n  position: absolute;\n  top: 10px;\n  right: 10px;\n  color: white;\n  font-size: 20px;\n  text-shadow: 2px 2px darkred;\n}\n\n#updateMenu {\n  position: absolute;\n  width: 300px;\n  height: 300px;\n  background: rgba(0, 0, 0, 0.8);\n  color: white;\n  padding: 10px;\n  display: none;\n  z-index: 99;\n}\n\n#updateMenu ul {\n  list-style: none;\n  padding-left: 0;\n}\n\n#updateMenu li {\n  margin-bottom: 10px;\n}\n\n.upgradeMenu {\n  width: 100px;\n  height: 100px;\n  padding: 10px;\n  border: 1px solid black;\n  position: absolute;\n  z-index: 3;\n  background-color: white;\n  display: none;\n}\n\n#superPower, #pauseGame, #resumeGame {\n  position: absolute;\n  bottom: 10px;\n}\n\n#superPower {\n  left: 10px;\n}\n\n#pauseGame {\n  right: 10px;\n}\n\n#resumeGame {\n  right: 110px;\n}\n\n.hidden {\n  display: none;\n}",
    "javascript": "class Tower {\n  constructor(top, left) {\n    this.tower = document.createElement('div');\n    this.tower.classList.add('tower');\n    this.tower.style.top = `${top}px`;\n    this.tower.style.left = `${left}px`;\n    this.power = 1;\n  }\n}\n\nclass Enemy {\n  constructor(left) {\n    this.enemy = document.createElement('div');\n    this.enemy.classList.add('enemy');\n    this.enemy.style.top = '0px';\n    this.enemy.style.left = `${left}px`;\n    this.health = 10;\n  }\n}\n\nlet score = 0;\nlet health = 100;\nlet selectedTower = null;\nlet gameInterval = null;\nlet moveIntervalArr = [];\n\nconst gameBoard = document.getElementById('gameBoard');\nconst scoreBoard = document.getElementById('scoreBoard');\nconst healthBar = document.getElementById('healthBar');\nconst upgradeMenu = document.querySelector('.upgradeMenu');\nconst upgradeButton = document.getElementById('upgradeButton');\nconst superPowerButton = document.getElementById(\"superPower\");\nconst pauseButton = document.getElementById(\"pauseGame\");\nconst resumeButton = document.getElementById(\"resumeGame\");\n\nfunction moveEnemy(enemy, speed, gameInterval, moveInterval, towers) {\n  const enemyTop = parseInt(enemy.enemy.style.top);\n  if (enemyTop >= 350) {\n    try {\n      gameBoard.removeChild(enemy.enemy);\n    } \n    catch {}\n    \n    health -= 20;\n    healthBar.textContent = `Health: ${health}`;\n\n    if (health <= 0) clearInterval(gameInterval);\n    clearInterval(moveInterval);\n  } else {\n    enemy.enemy.style.top = `${enemyTop + speed}px`;\n    checkCollision(enemy, towers);\n  }\n}\n\nfunction checkCollision(enemy, towers) {\n  towers.forEach(tower => {\n    const towerRect = tower.tower.getBoundingClientRect();\n    const enemyRect = enemy.enemy.getBoundingClientRect();\n\n    if (towerRect.left <= enemyRect.right && towerRect.right >= enemyRect.left &&\n        towerRect.top <= enemyRect.bottom && towerRect.bottom >= enemyRect.top\n      ) {\n        enemy.health -= tower.power;\n        if (enemy.health <= 0) {\n         try {\n             gameBoard.removeChild(enemy.enemy);\n         } \n         catch {}\n\n          score += 5;\n          scoreBoard.textContent = `Score: ${score}`;\n      }\n    }\n  });\n}\n\nfunction pauseGame() {\n  clearInterval(gameInterval);\n  moveIntervalArr.forEach(interval => clearInterval(interval));\n}\n\nfunction resumeGame() {\n  startGame();\n}\n\nfunction startGame() {\n  const startBtn = document.getElementById('startGame');\n  const updateMenu = document.getElementById('updateMenu');\n\n  startBtn.disabled = true;\n  updateMenu.style.display = 'none';\n\n  let towers = [];\n\n  gameBoard.addEventListener('click', function(event) {\n    const tower = new Tower(event.pageY, event.pageX);\n    towers.push(tower);\n    gameBoard.appendChild(tower.tower);\n  });\n\n  gameInterval = setInterval(() => {\n    const enemy = new Enemy(Math.random() * 350);\n    gameBoard.appendChild(enemy.enemy);\n\n    let speed = Math.floor(Math.random() * 5 + 5);\n\n    const moveInterval = setInterval(() => {\n      moveEnemy(enemy, speed, gameInterval, moveInterval, towers);\n    }, 100);\n\n    moveIntervalArr.push(moveInterval);\n  }, 1000);\n\n  gameBoard.addEventListener('click', function(event) {\n    if (event.target.classList.contains('tower')) {\n      selectedTower = event.target;\n      upgradeMenu.style.display = 'block';\n      upgradeMenu.style.left = `${event.pageX}px`;\n      upgradeMenu.style.top = `${event.pageY}px`;\n    } else {\n      selectedTower = null;\n      upgradeMenu.style.display = 'none';\n    }\n  });\n\n  upgradeButton.addEventListener('click', function() {\n    if (selectedTower) {\n      for(let tower of towers) {\n        if(tower.tower === selectedTower) {\n          tower.power += 2;\n        }\n      }\n      upgradeMenu.style.display = 'none';\n    }\n  });\n\n  superPowerButton.addEventListener(\"click\", function() {\n    score += 50;\n    scoreBoard.textContent = `Score: ${score}`;\n  });\n}\n\ndocument.getElementById('startGame').addEventListener('click', startGame);\ndocument.getElementById('pauseGame').addEventListener('click', pauseGame);\ndocument.getElementById('resumeGame').addEventListener('click', resumeGame);\n\ndocument.getElementById('closeMenu').addEventListener('click', function() {\n  document.getElementById('updateMenu').style.display = 'none';\n});\n\nwindow.onload = function() {\n  document.getElementById('updateMenu').style.display = 'block';\n};"
  },
  {
    "html": "<div id=\"gameBoard\"></div>\n<div id=\"scorePanel\">\n    <span id=\"scoreBoard\">Score: 0</span>\n    <span id=\"healthBar\">Health: 100</span>\n</div>\n<button id=\"startGame\">Start Game</button>\n<div id=\"updateMenu\">\n  <p>Game Updates</p>\n  <ul>\n    <li>Fixed error when attempting to remove a non-child enemy node.</li>\n    <li>Adjustment on z-index to ensure the visibility of towers and enemies.</li>\n    <li>Added upgrade functionality for towers.</li>\n    <li>Improved game performance and speed variation for enemies.</li>\n    <li>Included a pause game functionality.</li>\n    <li>Added new superpower feature for score boost.</li>\n  </ul>\n  <button id=\"closeMenu\">Close</button>\n</div>\n<div class=\"upgradeMenu hidden\">\n  <h3>Select Tower to Upgrade</h3>\n  <button id=\"upgradeButton\">Upgrade</button>\n</div>\n<button id=\"superPower\">Super Power</button>\n<button id=\"pauseGame\">Pause Game</button>\n<button id=\"resumeGame\">Resume Game</button>",
    "css": "body {\n  background-color: white;\n  background-repeat: no-repeat;\n  background-size: cover;\n}\n\n#gameBoard {\n  width: 600px;\n  height: 600px;\n  border: 2px solid black;\n  position: relative;\n  margin: 0 auto;\n}\n\n#scorePanel {\n  position: absolute;\n  top: 10px;\n  right: 10px;\n  color: black;\n  font-size: 20px;\n}\n\n.tower {\n  width: 30px;\n  height: 30px;\n  background-color: blue;\n  position: absolute;\n}\n\n.enemy {\n  width: 30px;\n  height: 30px;\n  background-color: red;\n  position: absolute;\n}\n\n#updateMenu {\n  position: absolute;\n  width: 300px;\n  height: 300px;\n  background: rgba(147, 206, 222, 0.9);\n  color: black;\n  padding: 10px;\n  display: none;\n}\n\n#updateMenu ul {\n  list-style: none;\n  padding-left: 0;\n}\n\n#updateMenu li {\n  margin-bottom: 10px;\n}\n\n.upgradeMenu {\n  width: 100px;\n  height: 100px;\n  padding: 10px;\n  border: 1px solid black;\n  position: absolute;\n  background-color: white;\n  display: none;\n}\n\n#superPower, #pauseGame, #resumeGame {\n  position: absolute;\n  bottom: 10px;\n}\n\n#superPower {\n  left: 10px;\n}\n\n#pauseGame {\n  right: 10px;\n}\n\n#resumeGame {\n  right: 110px;\n}\n\n.hidden {\n  display: none;\n}",
    "javascript": "class Tower {\n  constructor(top, left) {\n    this.tower = document.createElement('div');\n    this.tower.classList.add('tower');\n    this.tower.style.top = `${top}px`;\n    this.tower.style.left = `${left}px`;\n    this.power = 1;\n  }\n}\n\nclass Enemy {\n  constructor(left) {\n    this.enemy = document.createElement('div');\n    this.enemy.classList.add('enemy');\n    this.enemy.style.top = '0px';\n    this.enemy.style.left = `${left}px`;\n    this.health = 10;\n  }\n}\n\nlet score = 0;\nlet health = 100;\nlet selectedTower = null;\nlet gameInterval = null;\nlet moveIntervalArr = [];\n\nconst gameBoard = document.getElementById('gameBoard');\nconst scoreBoard = document.getElementById('scoreBoard');\nconst healthBar = document.getElementById('healthBar');\nconst upgradeMenu = document.querySelector('.upgradeMenu');\nconst upgradeButton = document.getElementById('upgradeButton');\nconst superPowerButton = document.getElementById(\"superPower\");\nconst pauseButton = document.getElementById(\"pauseGame\");\nconst resumeButton = document.getElementById(\"resumeGame\");\n\nfunction moveEnemy(enemy, speed, towers) {\n  const enemyTop = parseInt(enemy.enemy.style.top);\n  if (enemyTop >= 350) {\n    try {\n      gameBoard.removeChild(enemy.enemy);\n    } catch {} \n    health -= 20;\n    healthBar.textContent = `Health: ${health}`;\n    if (health <= 0) clearInterval(gameInterval);\n    const index = moveIntervalArr.indexOf(enemy);\n    moveIntervalArr.splice(index, 1);\n  } else {\n    enemy.enemy.style.top = `${enemyTop + speed}px`;\n    checkCollision(enemy, towers);\n  }\n}\n\nfunction checkCollision(enemy, towers) {\n  towers.forEach(tower => {\n    const towerRect = tower.tower.getBoundingClientRect();\n    const enemyRect = enemy.enemy.getBoundingClientRect();\n\n    if (towerRect.left <= enemyRect.right && towerRect.right >= enemyRect.left &&\n        towerRect.top <= enemyRect.bottom && towerRect.bottom >= enemyRect.top\n      ) {\n        enemy.health -= tower.power;\n        if (enemy.health <= 0) {\n          try {\n            gameBoard.removeChild(enemy.enemy);\n          } catch {}\n          score += 5;\n          scoreBoard.textContent = `Score: ${score}`;\n        }\n    }\n  });\n}\n\nfunction pauseGame() {\n  clearInterval(gameInterval);\n  moveIntervalArr.forEach(interval => clearInterval(interval));\n}\n\nfunction resumeGame() {\n  startGame();\n}\n\nfunction startGame() {\n  if (gameInterval) return;\n  let towers = [];\n\n  gameBoard.addEventListener('click', function(event) {\n    const tower = new Tower(event.clientY-gameBoard.offsetTop, event.clientX-gameBoard.offsetLeft);\n    towers.push(tower);\n    gameBoard.appendChild(tower.tower);\n  });\n\n  gameInterval = setInterval(() => {\n    const enemy = new Enemy(Math.random() * 570);\n    gameBoard.appendChild(enemy.enemy);\n\n    let speed = Math.floor(Math.random() * 2 + 1);\n\n    const moveInterval = setInterval(() => {\n      moveEnemy(enemy, speed, towers);\n    }, 50);\n    moveIntervalArr.push(moveInterval);\n  }, 2000);\n}\n\ndocument.getElementById('startGame').addEventListener('click', startGame);\ndocument.getElementById('pauseGame').addEventListener('click', pauseGame);\ndocument.getElementById('resumeGame').addEventListener('click', resumeGame);\n\ndocument.getElementById('closeMenu').addEventListener('click', function() {\n  document.getElementById('updateMenu').style.display = 'none';\n});\n\nwindow.onload = function() {\n  document.getElementById('updateMenu').style.display = 'block';\n};"
  },
  {
    "html": "<div id=\"gameBoard\"></div>\n<div id=\"scorePanel\">\n    <span id=\"scoreBoard\">Score: 0</span>\n    <span id=\"healthBar\">Health: 100</span>\n</div>\n<button id=\"startGame\">Start Game</button>\n<div id=\"updateMenu\">\n  <p>Game Updates</p>\n  <ul></ul>\n  <button id=\"closeMenu\">Close</button>\n</div>\n<div id=\"upgradeMenu\" class=\"hidden\">\n  <h3>Select Tower to Upgrade</h3>\n  <button id=\"upgradeButton\">Upgrade</button>\n</div>\n<button id=\"superPower\">Super Power</button>\n<button id=\"pauseGame\">Pause Game</button>\n<button id=\"resumeGame\">Resume Game</button>",
    "css": "#gameBoard {\n  width: 600px;\n  height: 600px;\n  border: 2px solid black;\n  position: relative;\n  margin: 0 auto;\n}\n#scorePanel {\n  position: absolute;\n  top: 10px;\n  right: 10px;\n  color: black;\n  font-size: 20px;\n}\n.tower {\n  width: 30px;\n  height: 30px;\n  background-color: blue;\n  position: absolute;\n}\n.enemy {\n  width: 30px;\n  height: 30px;\n  background-color: red;\n  position: absolute;\n}\n#updateMenu, .upgradeMenu {\n  position: absolute;\n  width: 300px;\n  height: 300px;\n  background: rgba(147, 206, 222, 0.9);\n  color: black;\n  padding: 10px;\n  display: none;\n}\n#superPower, #pauseGame, #resumeGame {\n  position: absolute;\n  bottom: 10px;\n}\n#superPower {\n  left: 10px;\n}\n#pauseGame {\n  right: 10px;\n}\n#resumeGame {\n  right: 110px;\n}\n.hidden {\n  display: none;\n}",
    "javascript": "class Tower {\n  constructor(top, left) {\n    this.tower = document.createElement('div');\n    this.tower.classList.add('tower');\n    this.tower.style.top = `${top}px`;\n    this.tower.style.left = `${left}px`;\n    this.power = 1;\n  }\n}\n\nclass Enemy {\n  constructor(left) {\n    this.enemy = document.createElement('div');\n    this.enemy.classList.add('enemy');\n    this.enemy.style.top = '0px';\n    this.enemy.style.left = `${left}px`;\n    this.health = 10;\n  }\n}\n\nlet score = 0;\nlet health = 100;\nlet selectedTower = null;\nlet gameInterval = null;\nlet moveIntervalArr = [];\n\nconst gameBoard = document.getElementById('gameBoard');\nconst scoreBoard = document.getElementById('scoreBoard');\nconst healthBar = document.getElementById('healthBar');\nconst upgradeMenu = document.querySelector('.upgradeMenu');\nconst upgradeButton = document.getElementById('upgradeButton');\nconst superPowerButton = document.getElementById(\"superPower\");\nconst pauseButton = document.getElementById(\"pauseGame\");\nconst resumeButton = document.getElementById(\"resumeGame\");\n\nfunction moveEnemy(enemy, speed, towers) {\n  \n  // check and deduct health if and only the enemy is inside the game board.\n  if (enemyTop >= 350 && enemyTop < 600 && enemyLeft >= 0 && enemyLeft < 600) {\n    try {\n      gameBoard.removeChild(enemy.enemy);\n    } catch {} \n    health -= 20;\n    healthBar.textContent = `Health: ${health}`;\n    if (health <= 0) clearInterval(gameInterval);\n    const index = moveIntervalArr.indexOf(enemy);\n    moveIntervalArr.splice(index, 1);\n  } else {\n    enemy.enemy.style.top = `${enemyTop + speed}px`;\n    checkCollision(enemy, towers);\n  }\n}\n\nfunction startGame() {\n  if (gameInterval) return;\n  let towers = [];\n\n  gameBoard.addEventListener('click', function(event) {\n\n    // Check if score is greater than 10 to add a tower\n    if(score < 10) return;\n    score -= 10;  // Deduct score by tower cost\n    scoreBoard.textContent = `Score: ${score}`;\n\n    const tower = new Tower(event.clientY-gameBoard.offsetTop, event.clientX-gameBoard.offsetLeft);\n    towers.push(tower);\n    gameBoard.appendChild(tower.tower);\n  });\n\n  gameInterval = setInterval(() => {\n    // Ensure enemies are within the board width.\n    const enemy = new Enemy(Math.random() * (570 - 30));\n    gameBoard.appendChild(enemy.enemy);\n\n    const moveInterval = setInterval(() => {\n      moveEnemy(enemy, 2, towers);\n    }, 50);\n    moveIntervalArr.push(moveInterval);\n  }, 2000);\n}\n\ndocument.getElementById('startGame').addEventListener('click', startGame);\ndocument.getElementById('pauseGame').addEventListener('click', pauseGame);\ndocument.getElementById('resumeGame').addEventListener('click', resumeGame);"
  },
  {
    "html": "<div id=\"gameBoard\"></div>\n<div id=\"scorePanel\">\n    <span id=\"scoreBoard\">Score: 0</span>\n    <span id=\"healthBar\">Health: 100</span>\n</div>\n<button id=\"startGame\">Start Game</button>\n<div id=\"updateMenu\" class=\"hidden\">\n  <p>Game Updates</p>\n  <ul></ul>\n  <button id=\"closeMenu\">Close</button>\n</div>\n<button id=\"superPower\">Super Power</button>\n<button id=\"pauseGame\">Pause Game</button>\n<button id=\"resumeGame\">Resume Game</button>",
    "css": "#gameBoard {\n  width: 600px;\n  height: 600px;\n  border: 2px solid black;\n  position: relative;\n  margin: 0 auto;\n}\n#scorePanel {\n  position: absolute;\n  top: 10px;\n  right: 10px;\n  color: black;\n  font-size: 20px;\n}\n.tower {\n  width: 30px;\n  height: 30px;\n  background-color: blue;\n  position: absolute;\n}\n.enemy {\n  width: 30px;\n  height: 30px;\n  background-color: red;\n  position: absolute;\n}\n#updateMenu{\n  position: absolute;\n  width: 300px;\n  height: 300px;\n  background: rgba(147, 206, 222, 0.9);\n  color: black;\n  padding: 10px;\n}\n#superPower, #pauseGame, #resumeGame, #startGame, #closeMenu {\n  position: absolute;\n  bottom: 10px;\n}\n#superPower {\n  left: 10px;\n}\n#pauseGame, #startGame {\n  right: 10px;\n}\n#resumeGame {\n  right: 110px;\n}\n.hidden {\n  display: none;\n}",
    "javascript": "class Tower {\n  constructor(top, left) {\n    this.tower = document.createElement('div');\n    this.tower.classList.add('tower');\n    this.tower.style.top = `${top}px`;\n    this.tower.style.left = `${left}px`;\n    this.power = 1;\n  }\n}\n\nclass Enemy {\n  constructor(left) {\n    this.enemy = document.createElement('div');\n    this.enemy.classList.add('enemy');\n    this.enemy.style.top = '0px';\n    this.enemy.style.left = `${left}px`;\n    this.health = 10;\n  }\n}\n\nlet score = 0;\nlet health = 100;\nlet selectedTower = null;\nlet gameInterval = null;\nlet moveIntervalArr = [];\n\nconst gameBoard = document.getElementById('gameBoard');\nconst scoreBoard = document.getElementById('scoreBoard');\nconst healthBar = document.getElementById('healthBar');\nconst updateMenu = document.getElementById('updateMenu');\nconst closeMenu = document.getElementById('closeMenu');\n\nfunction moveEnemy(enemy, speed, towers) {\n  let enemyTop = parseInt(enemy.enemy.style.top);\n  let enemyLeft = parseInt(enemy.enemy.style.left);\n  \n  if (enemyTop >= 350 && enemyTop < 600 && enemyLeft >= 0 && enemyLeft < 600) {\n    try {\n      gameBoard.removeChild(enemy.enemy);\n    } catch {} \n    \n    health -= 20;\n    healthBar.textContent = `Health: ${health}`;\n    if (health <= 0) clearInterval(gameInterval);\n    \n    const index = moveIntervalArr.indexOf(enemy);\n    moveIntervalArr.splice(index, 1);\n  } else {\n    enemy.enemy.style.top = `${enemyTop + speed}px`;\n  }\n}\n\nfunction startGame() {\n  if (gameInterval) return;\n  let towers = [];\n\n  gameBoard.addEventListener('click', function(event) {\n    if(score < 10) return;\n    score -= 10;\n    scoreBoard.textContent = `Score: ${score}`;\n\n    const tower = new Tower(event.clientY-gameBoard.offsetTop, event.clientX-gameBoard.offsetLeft);\n    towers.push(tower);\n    gameBoard.appendChild(tower.tower);\n  });\n\n  gameInterval = setInterval(() => {\n    const enemy = new Enemy(Math.random() * (570 - 30));\n    gameBoard.appendChild(enemy.enemy);\n\n    const moveInterval = setInterval(() => {\n      moveEnemy(enemy, 2, towers);\n    }, 50);\n    moveIntervalArr.push(moveInterval);\n  }, 2000);\n}\n\ndocument.getElementById('startGame').addEventListener('click', startGame);\ndocument.getElementById('pauseGame').addEventListener('click', () => clearInterval(gameInterval));\ndocument.getElementById('resumeGame').addEventListener('click', startGame);\ncloseMenu.addEventListener('click', () => {\n  updateMenu.classList.add('hidden');\n});"
  },
  {
    "html": "<div id=\"gameBoard\"></div>\n<div id=\"scorePanel\">\n    <span id=\"scoreBoard\">Score: 0</span>\n    <span id=\"healthBar\">Health: 100</span>\n</div>\n<button id=\"startGame\">Start Game</button>\n<div id=\"updateMenu\" class=\"hidden\">\n  <p>Game Updates</p>\n  <ul></ul>\n  <button id=\"closeMenu\">Close</button>\n</div>\n<button id=\"superPower\">Super Power</button>\n<button id=\"pauseGame\">Pause Game</button>\n<button id=\"resumeGame\">Resume Game</button>",
    "css": "#gameBoard {\n  width: 600px;\n  height: 600px;\n  border: 2px solid black;\n  position: relative;\n  margin: 0 auto;\n}\n#scorePanel {\n  position: absolute;\n  top: 10px;\n  right: 10px;\n  color: black;\n  font-size: 20px;\n}\n.tower {\n  width: 30px;\n  height: 30px;\n  background-color: blue;\n  position: absolute;\n}\n.enemy {\n  width: 30px;\n  height: 30px;\n  background-color: red;\n  position: absolute;\n}\n#updateMenu{\n  position: absolute;\n  width: 300px;\n  height: 300px;\n  background: rgba(147, 206, 222, 0.9);\n  color: black;\n  padding: 10px;\n}\n#superPower, #pauseGame, #resumeGame, #startGame, #closeMenu {\n  position: absolute;\n  bottom: 10px;\n  left: 10px;\n}\n.hidden {\n  display: none;\n}",
    "javascript": "class Tower {\n  constructor(top, left) {\n    this.tower = document.createElement('div');\n    this.tower.classList.add('tower');\n    this.tower.style.top = `${top}px`;\n    this.tower.style.left = `${left}px`;\n    this.power = 1;\n  }\n}\n\nclass Enemy {\n  constructor(left) {\n    this.enemy = document.createElement('div');\n    this.enemy.classList.add('enemy');\n    this.enemy.style.top = '0px';\n    this.enemy.style.left = `${left}px`;\n    this.health = 10;\n  }\n}\n\nlet score = 0;\nlet health = 100;\nlet selectedTower = null;\nlet gameInterval = null;\nlet moveIntervalArr = [];\n\nconst gameBoard = document.getElementById('gameBoard');\nconst scoreBoard = document.getElementById('scoreBoard');\nconst healthBar = document.getElementById('healthBar');\nconst updateMenu = document.getElementById('updateMenu');\nconst closeMenu = document.getElementById('closeMenu');\n\nfunction moveEnemy(enemy, speed, towers) {\n  let enemyTop = parseInt(enemy.enemy.style.top);\n  let enemyLeft = parseInt(enemy.enemy.style.left);\n  \n  if (enemyTop >= 350 && enemyTop < 600 && enemyLeft >= 0 && enemyLeft < 600) {\n    try {\n      gameBoard.removeChild(enemy.enemy);\n    } catch {} \n    \n    health -= 20;\n    healthBar.textContent = `Health: ${health}`;\n    if (health <= 0) clearInterval(gameInterval);\n    \n    const index = moveIntervalArr.indexOf(enemy);\n    moveIntervalArr.splice(index, 1);\n  } else {\n    enemy.enemy.style.top = `${enemyTop + speed}px`;\n  }\n}\n\nfunction startGame() {\n  if (gameInterval) return;\n  let towers = [];\n\n  gameBoard.addEventListener('click', function(event) {\n    if(score < 10) return;\n    score -= 10;\n    scoreBoard.textContent = `Score: ${score}`;\n\n    const tower = new Tower(event.clientY-gameBoard.offsetTop, event.clientX-gameBoard.offsetLeft);\n    towers.push(tower);\n    gameBoard.appendChild(tower.tower);\n  });\n\n  gameInterval = setInterval(() => {\n    const enemy = new Enemy(Math.random() * (570 - 30));\n    gameBoard.appendChild(enemy.enemy);\n\n    const moveInterval = setInterval(() => {\n      moveEnemy(enemy, 2, towers);\n    }, 50);\n    moveIntervalArr.push(moveInterval);\n  }, 2000);\n}\n\ndocument.getElementById('startGame').addEventListener('click', startGame);\ndocument.getElementById('pauseGame').addEventListener('click', () => clearInterval(gameInterval));\ndocument.getElementById('resumeGame').addEventListener('click', startGame);\ncloseMenu.addEventListener('click', () => {\n  updateMenu.classList.add('hidden');\n});"
  },
  {
    "html": "<div id=\"gameBoard\"></div>\n<div id=\"scorePanel\">\n    <span id=\"scoreBoard\">Score: 20</span>\n    <span id=\"healthBar\">Health: 100</span>\n</div>\n<button id=\"startGame\">Start Game</button>\n<div id=\"updateMenu\" class=\"hidden\">\n  <p>Game Updates</p>\n  <ul></ul>\n  <button id=\"closeMenu\">Close</button>\n</div>\n<button id=\"superPower\">Super Power</button>\n<button id=\"resumeGame\">Resume Game</button>\n<button id=\"pauseGame\">Pause Game</button>\n<button id=\"normalTower\">Place Normal Tower</button>\n<button id=\"projectileTower\">Place Projectile Tower</button>",
    "css": "#gameBoard {\n  width: 600px;\n  height: 600px;\n  border: 2px solid black;\n  position: relative;\n  margin: 0 auto;\n}\n#scorePanel {\n  position: absolute;\n  top: 10px;\n  right: 10px;\n  color: black;\n  font-size: 20px;\n}\n.tower {\n  width: 30px;\n  height: 30px;\n  background-color: blue;\n  position: absolute;\n}\n.enemy {\n  width: 30px;\n  height: 30px;\n  background-color: red;\n  position: absolute;\n}\n#updateMenu {\n  position: absolute;\n  width: 300px;\n  height: 300px;\n  background: rgba(147, 206, 222, 0.9);\n  color: black;\n  padding: 10px;\n  top: 0;\n  right: 0;\n}\n#startGame {\n  position: absolute;\n  bottom: 210px;\n  left: 10px;\n}\n#superPower {\n  position: absolute;\n  bottom: 170px;\n  left: 10px;\n}\n#pauseGame {\n  position: absolute;\n  bottom: 130px;\n  left: 10px;\n}\n#resumeGame {\n  position: absolute;\n  bottom: 90px;\n  left: 10px;\n}\n#normalTower {\n  position: absolute;\n  bottom: 50px;\n  left: 10px;\n}\n#projectileTower {\n  position: absolute;\n  bottom: 10px;\n  left: 10px;\n}\n.hidden {\n  display: none;\n}",
    "javascript": "class Tower {\n  constructor(top, left) {\n    this.tower = document.createElement('div');\n    this.tower.classList.add('tower');\n    this.tower.style.top = `${top}px`;\n    this.tower.style.left = `${left}px`;\n    this.power = 1;\n  }\n}\n\nclass Enemy {\n  constructor(left) {\n    this.enemy = document.createElement('div');\n    this.enemy.classList.add('enemy');\n    this.enemy.style.top = '0px';\n    this.enemy.style.left = `${left}px`;\n    this.health = 10;\n  }\n}\n\nlet score = 20;\nlet health = 100;\nlet towers = [];\nlet isGameActive = false;\nlet gameInterval = null;\nlet moveIntervalArr = [];\n\nconst gameBoard = document.getElementById('gameBoard'); \nconst scoreBoard = document.getElementById('scoreBoard'); \nconst healthBar = document.getElementById('healthBar');\nconst closeMenu = document.getElementById('closeMenu');\n\nfunction moveEnemy(enemy, speed) {\n  let enemyTop = parseInt(enemy.enemy.style.top);\n  let enemyLeft = parseInt(enemy.enemy.style.left);\n\n  if (enemyTop >= 350 && enemyTop < 600 && enemyLeft >= 0 && enemyLeft < 600) {\n    try {\n      gameBoard.removeChild(enemy.enemy);\n    } catch {} \n\n    health -= 20;\n    healthBar.textContent = `Health: ${health}`;\n    if (health <= 0) clearInterval(gameInterval);\n\n    const index = moveIntervalArr.indexOf(enemy);\n    moveIntervalArr.splice(index, 1);\n  } else {\n    enemy.enemy.style.top = `${enemyTop + speed}px`;\n  }\n}\n\nfunction startGame() {\n  if (isGameActive) return;\n  isGameActive = true;\n\n  gameInterval = setInterval(() => {\n    if (!isGameActive) clearInterval(gameInterval);\n\n    const enemy = new Enemy(Math.random() * (570 - 30));\n    gameBoard.appendChild(enemy.enemy);\n\n    const moveInterval = setInterval(() => {\n      if (!isGameActive) clearInterval(moveInterval);\n      moveEnemy(enemy, 2);\n    }, 50);\n    moveIntervalArr.push(moveInterval);\n  }, 2000);\n}\n\nfunction createTower(event, changeScore = true) {\n  if (score < 10 && changeScore) return;\n  if(changeScore){\n    score -= 10;\n    scoreBoard.textContent = `Score: ${score}`;\n  } \n\n  const tower = new Tower(event.clientY - gameBoard.offsetTop, event.clientX - gameBoard.offsetLeft);\n  towers.push(tower);\n  gameBoard.appendChild(tower.tower);\n}\n\ndocument.getElementById('startGame').addEventListener('click', startGame);\ndocument.getElementById('pauseGame').addEventListener('click', () => {\n  isGameActive = false;\n  clearInterval(gameInterval);\n  moveIntervalArr.forEach(clearInterval);\n});\ndocument.getElementById('resumeGame').addEventListener('click', startGame);\ndocument.getElementById('normalTower').addEventListener('click', (event) => createTower(event,false));\ndocument.getElementById('projectileTower').addEventListener('click', (event) => createTower(event,false));\ncloseMenu.addEventListener('click', () => {\n  updateMenu.classList.add('hidden');\n});"
  },
  {
    "html": "<div id=\"gameBoard\"></div>\n<div id=\"scorePanel\">\n    <span id=\"scoreBoard\">Score: 20</span>\n    <span id=\"healthBar\">Health: 100</span>\n</div>\n<button id=\"startGame\">Start Game</button>\n<div id=\"updateMenu\" class=\"hidden\">\n  <p>Game Updates</p>\n  <ul></ul>\n  <button id=\"closeMenu\">Close</button>\n</div>\n<button id=\"superPower\">Super Power</button>\n<button id=\"resumeGame\">Resume Game</button>\n<button id=\"pauseGame\">Pause Game</button>\n<button id=\"normalTower\">Place Normal Tower</button>\n<button id=\"projectileTower\">Place Projectile Tower</button>",
    "css": "#gameBoard {\n  width: 600px;\n  height: 600px;\n  border: 2px solid black;\n  position: relative;\n  margin: 0 auto;\n}\n#scorePanel {\n  position: absolute;\n  top: 10px;\n  right: 10px;\n  color: black;\n  font-size: 20px;\n}\n.tower {\n  width: 30px;\n  height: 30px;\n  background-color: blue;\n  position: absolute;\n}\n.enemy {\n  width: 30px;\n  height: 30px;\n  background-color: red;\n  position: absolute;\n}\n#updateMenu {\n  position: absolute;\n  width: 300px;\n  height: 300px;\n  background: rgba(147, 206, 222, 0.9);\n  color: black;\n  padding: 10px;\n  top: 0;\n  right: 0;\n}\n#startGame {\n  position: absolute;\n  bottom: 210px;\n  left: 10px;\n}\n#superPower {\n  position: absolute;\n  bottom: 170px;\n  left: 10px;\n}\n#pauseGame {\n  position: absolute;\n  bottom: 130px;\n  left: 10px;\n}\n#resumeGame {\n  position: absolute;\n  bottom: 90px;\n  left: 10px;\n}\n#normalTower {\n  position: absolute;\n  bottom: 50px;\n  left: 10px;\n}\n#projectileTower {\n  position: absolute;\n  bottom: 10px;\n  left: 10px;\n}\n.hidden {\n  display: none;\n}",
    "javascript": "class Tower {\n  constructor(top, left) {\n    this.tower = document.createElement('div');\n    this.tower.classList.add('tower');\n    this.tower.style.top = `${top}px`;\n    this.tower.style.left = `${left}px`;\n    this.power = 1;\n  }\n}\n\nclass Enemy {\n  constructor(left) {\n    this.enemy = document.createElement('div');\n    this.enemy.classList.add('enemy');\n    this.enemy.style.top = '0px';\n    this.enemy.style.left = `${left}px`;\n    this.health = 10;\n  }\n}\n\nlet score = 20;\nlet health = 100;\nlet towers = [];\nlet isGameActive = false;\nlet gameInterval = null;\nlet moveIntervalArr = [];\nlet isPlacingTower = false;\nlet towerType = \"\";\n\nfunction moveEnemy(enemy, speed) {\n  let enemyTop = parseInt(enemy.enemy.style.top);\n  if (enemyTop >= 350) {\n    healthBar.textContent = `Health: ${health -= 20}`;\n    enemy.enemy.remove();\n    if (health <= 0) {\n      clearInterval(gameInterval);\n      isGameActive = false;\n    }\n  } else {\n    enemy.enemy.style.top = `${enemyTop + speed}px`;\n  }\n}\n\nfunction startGame() {\n  if (isGameActive) return;\n\n  isGameActive = true;\n  gameInterval = setInterval(() => {\n    if (!isGameActive) {\n      clearInterval(gameInterval);\n      return;\n    }\n    const enemy = new Enemy(Math.random() * 570);\n    gameBoard.appendChild(enemy.enemy);\n    const moveInterval = setInterval(() => {\n      if (!isGameActive) {\n        clearInterval(moveInterval);\n        return;\n      }\n      moveEnemy(enemy, 2);\n    }, 50);\n    moveIntervalArr.push(moveInterval);\n  }, 2000);\n}\n\nfunction placeTower(event) {\n  if (!isPlacingTower || score < 10) return;\n  score -= 10;\n  scoreBoard.textContent = `Score: ${score}`;\n\n  const tower = new Tower(event.clientY, event.clientX);\n  gameBoard.appendChild(tower.tower);\n  towers.push(tower);\n\n  isPlacingTower = false;\n}\n\ndocument.getElementById('startGame').addEventListener('click', startGame);\ndocument.getElementById('pauseGame').addEventListener('click', () => {\n  isGameActive = false;\n  clearInterval(gameInterval);\n  moveIntervalArr.forEach(clearInterval);\n});\ndocument.getElementById('resumeGame').addEventListener('click', startGame);\ndocument.getElementById('normalTower').addEventListener('click', () => {\n  isPlacingTower = true;\n  towerType = \"normalTower\";\n});\ndocument.getElementById('projectileTower').addEventListener('click', () => {\n  isPlacingTower = true;\n  towerType = \"projectileTower\";\n});\ngameBoard.addEventListener('click', placeTower);\ndocument.getElementById('closeMenu').addEventListener('click', () => {\n  document.getElementById('updateMenu').classList.add('hidden');\n});"
  },
  {
    "html": "<div id=\"gameBoard\"></div>\n<div id=\"scorePanel\">\n    <span id=\"scoreBoard\">Score: 20</span>\n    <span id=\"healthBar\">Health: 100</span>\n</div>\n<button id=\"startGame\">Start Game</button>\n<div id=\"updateMenu\" class=\"hidden\">\n  <p>Game Updates</p>\n  <ul></ul>\n  <button id=\"closeMenu\">Close</button>\n</div>\n<button id=\"pauseGame\">Pause Game</button>\n<button id=\"resumeGame\">Resume Game</button>\n<button id=\"tower\">Place Tower</button>",
    "css": "#gameBoard {\n  width: 600px;\n  height: 600px;\n  border: 2px solid black;\n  position: relative;\n  margin: 20px auto;\n}\n#scorePanel {\n  display: flex;\n  justify-content: space-between;\n  width: 600px;\n  margin: 10px auto;\n  padding: 0 10px;\n  box-sizing: border-box;\n  background: white;\n  color: #444;\n}\n.tower {\n  width: 30px;\n  height: 30px;\n  background-color: blue;\n  position: absolute;\n  opacity: 0.7;\n  cursor: pointer;\n}\n.enemy {\n  width: 30px;\n  height: 30px;\n  background-color: red;\n  position: absolute;\n}\n.enemy-hit {\n  background-color: yellow;\n}\n.projectile {\n  width: 8px;\n  height: 8px;\n  background-color: green;\n  position: absolute;\n  border-radius: 50%;\n}",
    "javascript": "class Tower {\n constructor(top, left) {\n   this.tower = document.createElement('div');\n   this.tower.classList.add('tower');\n   this.tower.style.top = `${top}px`;\n   this.tower.style.left = `${left}px`;\n   this.power = 1;\n }\n}\n\nclass Enemy {\n constructor(left) {\n   this.enemy = document.createElement('div');\n   this.enemy.classList.add('enemy');\n   this.enemy.style.top = '0px';\n   this.enemy.style.left = `${left}px`;\n   this.health = 10;\n }\n}\n\nconst gameBoard = document.getElementById('gameBoard');\nconst scoreBoard = document.getElementById('scoreBoard');\nconst healthBar = document.getElementById('healthBar');\n\nlet score = 20;\nlet health = 100;\nlet enemies = [];\nlet towers = [];\nlet isGameActive = false;\nlet gameInterval = null;\n\nfunction generateEnemy() {\n const left = Math.floor(Math.random() * (gameBoard.offsetWidth - 50));\n enemies.push(new Enemy(left));\n let lastEnemy = enemies[enemies.length - 1];\n gameBoard.appendChild(lastEnemy.enemy);\n}\n\nfunction moveEnemies() {\n enemies.forEach((enemy, index) => {\n   let top = parseInt(enemy.enemy.style.top);\n   if (top >= (gameBoard.offsetHeight - 50)) {\n     health -= 10;\n     healthBar.textContent = `Health: ${health}`;\n     enemy.enemy.remove();\n     enemies.splice(index, 1);\n   } else {\n     top += 1;\n     enemy.enemy.style.top = `${top}px`;\n   }\n });\n\n if (health <= 0) {\n   clearInterval(gameInterval);\n }\n}\n\nfunction placeTower(event) {\n const left = event.clientX - gameBoard.offsetLeft - 15;\n const top = event.clientY - gameBoard.offsetTop - 15;\n towers.push(new Tower(top, left));\n let lastTower = towers[towers.length - 1];\n gameBoard.appendChild(lastTower.tower);\n}\n\nfunction startGame() {\n gameInterval = setInterval(() => {\n   generateEnemy();\n   moveEnemies();\n   score += 1;\n   scoreBoard.textContent = `Score: ${score}`;\n }, 1000);\n}\n\nfunction pauseGame() {\n clearInterval(gameInterval);\n}\n\nfunction resumeGame() {\n startGame();\n}\n\ngameBoard.addEventListener('click', placeTower);\ndocument.getElementById('startGame').addEventListener('click', startGame);\ndocument.getElementById('pauseGame').addEventListener('click', pauseGame);\ndocument.getElementById('resumeGame').addEventListener('click', resumeGame);"
  },
  {
    "html": "<body>\n  <div id=\"gameBoard\"></div>\n  <div id=\"scorePanel\">\n      <span id=\"scoreBoard\">Score: 20</span>\n      <span id=\"healthBar\">Health: 100</span>\n  </div>\n  <button id=\"startGame\">Start Game</button>\n  <button id=\"pauseGame\">Pause Game</button>\n  <button id=\"resumeGame\">Resume Game</button>\n  <button id=\"tower\">Place Tower</button>\n  <div id=\"updateMenu\" class=\"hidden\">\n    <h2>Game Updates</h2>\n    <ul></ul>\n    <button id=\"closeMenu\">Close</button>\n  </div>\n</body>",
    "css": "#gameBoard {\n  width: 600px;\n  height: 600px;\n  border: 2px solid black;\n  position: relative;\n  margin: 20px auto;\n}\n\n#scorePanel {\n  display: flex;\n  justify-content: space-between;\n  width: 600px;\n  margin: 10px auto;\n  padding: 0 10px;\n  box-sizing: border-box;\n  background: white;\n  color: #444;\n}\n\n.hidden {\n  display: none;\n}\n\n.tower {\n  width: 30px;\n  height: 30px;\n  background-color: blue;\n  position: absolute;\n  opacity: 0.7;\n  pointer-events: none;\n}\n\n.enemy {\n  width: 30px;\n  height: 30px;\n  background-color: red;\n  position: absolute;\n}\n\n.projectile {\n  width: 10px;\n  height: 10px;\n  position: absolute;\n  background-color: green;\n  margin: auto;\n  border-radius: 50%;\n}",
    "javascript": "class Tower {\n  constructor(top, left) {\n    this.top = top;\n    this.left = left;\n    this.tower = document.createElement('div');\n    this.tower.classList.add('tower');\n    this.tower.style.top = `${this.top}px`;\n    this.tower.style.left = `${this.left}px`;\n    gameBoard.appendChild(this.tower);\n  }\n}\n\nclass Enemy {\n  constructor(left) {\n    this.top = 0;\n    this.left = left;\n    this.enemy = document.createElement('div');\n    this.enemy.classList.add('enemy');\n    this.enemy.style.top = `${this.top}px`;\n    this.enemy.style.left = `${this.left}px`;\n    gameBoard.appendChild(this.enemy);\n    this.interval = setInterval(() => this.moveEnemy(), 10);\n  }\n  \n  moveEnemy() {\n    this.top += 1;\n    this.enemy.style.top = `${this.top}px`;\n    towers.forEach(tower => {\n      const distance = Math.hypot(tower.top - this.top, tower.left - this.left);\n      if(distance < 60) {\n        clearInterval(this.interval);\n        gameBoard.removeChild(this.enemy);\n        score += 10;\n        scoreBoard.textContent = `Score: ${score}`;\n      }\n    });\n  }\n}\n\nlet towers = [];\nlet score=20;\nconst gameBoard = document.getElementById('gameBoard');\nconst scoreBoard = document.getElementById('scoreBoard');\n\nfunction handleClick(event) {\n  const rect = gameBoard.getBoundingClientRect();\n  const x = event.clientX - rect.left;\n  const y = event.clientY - rect.top;\n  towers.push(new Tower(x,y));\n}\n\nfunction generateEnemy() {\n  new Enemy(Math.floor(Math.random() * (gameBoard.offsetWidth - 30)));\n}\n\nlet enemyInterval;\n\ndocument.getElementById(\"startGame\").addEventListener('click', () => {\n  enemyInterval = setInterval(generateEnemy, 2000);\n});\n\ndocument.getElementById(\"pauseGame\").addEventListener('click', () => {\n  clearInterval(enemyInterval);\n})\n\ndocument.getElementById(\"resumeGame\").addEventListener('click', () => {\n  enemyInterval = setInterval(generateEnemy, 2000);\n})\n\ngameBoard.addEventListener('click', handleClick);"
  },
  {
    "html": "<body>\n  <div id=\"gameBoard\"></div>\n  <div id=\"scorePanel\">\n      <span id=\"scoreBoard\">Score: 0</span>\n  </div>\n  \n  <button id=\"startGame\">Start Game</button>\n  <button id=\"pauseGame\">Pause Game</button>\n  <button id=\"resumeGame\">Resume Game</button>\n  <button id=\"tower\">Place Tower</button>\n\n  <div id=\"updateMenu\" class=\"hiddenMenu\">\n      <h2>Game Updates</h2>\n      <ul></ul>\n      <button id=\"closeMenu\">Close</button>\n  </div>\n</body>",
    "css": "#gameBoard {\n  width: 600px;\n  height: 600px;\n  border: 2px solid black;\n  position: relative;\n  margin: 20px auto;\n}\n\n#scorePanel {\n  display: flex;\n  justify-content: space-between;\n  width: 600px;\n  margin: 10px auto;\n  padding: 0 10px;\n  box-sizing: border-box;\n  background: white;\n  color: #444;\n}\n\n.hiddenMenu {\n  display: none;\n}\n\n.tower {\n  width: 30px;\n  height: 30px;\n  background-color: blue;\n  position: absolute;\n  opacity: 0.7;\n}\n\n.enemy {\n  width: 30px;\n  height: 30px;\n  background-color: red;\n  position: absolute;\n}\n\n.projectile {\n  width: 10px;\n  height: 10px;\n  position: absolute;\n  background-color: green;\n  margin: auto;\n  border-radius: 50%;\n}",
    "javascript": "class Tower {\n  constructor(left, top) {\n    this.left = left;\n    this.top = top;\n    this.towerElement = document.createElement('div');\n    this.towerElement.classList.add('tower');\n    this.towerElement.style.left = `${this.left}px`;\n    this.towerElement.style.top = `${this.top}px`;\n    gameBoard.appendChild(this.towerElement);\n  }\n}\n\nclass Enemy {\n  constructor(left){\n    this.left = left;\n    this.top = 0;\n    this.enemyElement = document.createElement('div');\n    this.enemyElement.classList.add('enemy');\n    this.enemyElement.style.left = `${this.left}px`;\n    gameBoard.appendChild(this.enemyElement);\n    this.moveEnemy = setInterval(() => this.move(), 20);\n  }\n\n  move() {\n    this.top += 1;\n    this.enemyElement.style.top = `${this.top}px`;\n    this.escape();\n  }\n\n  escape() {\n    if(this.top > gameBoard.offsetHeight) {\n      this.top = 0;\n      this.enemyElement.remove();\n      score -= 20;\n      scoreBoard.textContent = `Score: ${score}`;\n    }\n  }\n}\n\nlet towers = [];\nlet enemies = [];\nlet enemyInterval;\nlet score=0;\nconst gameBoard = document.getElementById('gameBoard');\nconst scoreBoard = document.getElementById('scoreBoard');\n\nfunction placeTower(event) {\n  const rect = gameBoard.getBoundingClientRect();\n  const x = event.clientX - rect.left;\n  const y = event.clientY - rect.top;\n  towers.push(new Tower(x,y));\n}\n\nfunction generateEnemy() {\n  enemies.push(new Enemy(Math.random() * gameBoard.offsetWidth));\n}\n\ndocument.getElementById(\"startGame\").addEventListener(\"click\", function() {\n  enemyInterval = setInterval(generateEnemy, 2000);\n});\n\ndocument.getElementById(\"pauseGame\").addEventListener('click', function() {\n  clearInterval(enemyInterval);\n});\n\ndocument.getElementById('resumeGame').addEventListener(\"click\", function() {\n  enemyInterval = setInterval(generateEnemy, 2000);\n});\n\ngameBoard.addEventListener('click', placeTower);"
  },
  {
    "html": "<body>\n  <div id=\"gameBoard\"></div>\n  <div id=\"scorePanel\">\n      <span id=\"scoreBoard\">Score: 0</span>\n  </div>\n  \n  <button id=\"startGame\">Start Game</button>\n  <button id=\"pauseGame\">Pause Game</button>\n  <button id=\"resumeGame\">Resume Game</button>\n\n  <div id=\"updateMenu\" class=\"hiddenMenu\">\n      <h2>Game Updates</h2>\n      <ul></ul>\n      <button id=\"closeMenu\">Close</button>\n  </div>\n</body>",
    "css": "#gameBoard {\n  width: 600px;\n  height: 600px;\n  border: 2px solid black;\n  position: relative;\n  margin: 20px auto;\n}\n\n#scorePanel {\n  display: flex;\n  justify-content: space-between;\n  width: 600px;\n  margin: 10px auto;\n  padding: 0 10px;\n  box-sizing: border-box;\n  background: white;\n  color: #444;\n}\n\n.hiddenMenu {\n  display: none;\n}\n\n.tower {\n  width: 30px;\n  height: 30px;\n  background-color: blue;\n  position: absolute;\n  opacity: 0.7;\n}\n\n.enemy {\n  width: 30px;\n  height: 30px;\n  background-color: red;\n  position: absolute;\n}",
    "javascript": "class Tower {\n  constructor(left, top) {\n    this.left = left;\n    this.top = top;\n    this.towerElement = document.createElement('div');\n    this.towerElement.classList.add('tower');\n    this.towerElement.style.left = `${this.left}px`;\n    this.towerElement.style.top = `${this.top}px`;\n    gameBoard.appendChild(this.towerElement);\n    this.shootingInterval = setInterval(() => this.shoot(), 1000);\n  }\n\n  shoot() {\n    for (let enemy of enemies) {\n      // calculate distance\n      const distance = Math.sqrt(Math.pow(enemy.left - this.left, 2) + Math.pow(enemy.top - this.top, 2));\n      if (distance < 100) { // shoot enemy if it is within a distance of 100px\n        enemy.health -= 20;\n        if (enemy.health <= 0) {\n          enemy.enemyElement.remove();\n          enemies = enemies.filter(e => e !== enemy);\n          score += 10;\n          scoreBoard.textContent = `Score: ${score}`;\n        }\n      }\n    }\n  }\n}\n\nclass Enemy {\n  constructor(left){\n    this.left = left;\n    this.top = 0;\n    this.health = 100;\n    this.enemyElement = document.createElement('div');\n    this.enemyElement.classList.add('enemy');\n    this.enemyElement.style.left = `${this.left}px`;\n    gameBoard.appendChild(this.enemyElement);\n    this.moveEnemy = setInterval(() => this.move(), 20);\n  }\n\n  move() {\n    this.top += 1;\n    this.enemyElement.style.top = `${this.top}px`;\n    this.escape();\n  }\n\n  escape() {\n    if(this.top > gameBoard.offsetHeight) {\n      this.enemyElement.remove();\n      enemies = enemies.filter(e => e !== this);\n      score -= 20;\n      scoreBoard.textContent = `Score: ${score}`;\n    }\n  }\n}\n\nlet towers = [];\nlet enemies = [];\nlet enemyInterval;\nlet score=0;\nconst gameBoard = document.getElementById('gameBoard');\nconst scoreBoard = document.getElementById('scoreBoard');\n\nfunction placeTower(event) {\n  const rect = gameBoard.getBoundingClientRect();\n  const x = event.clientX - rect.left;\n  const y = event.clientY - rect.top;\n  towers.push(new Tower(x,y));\n}\n\nfunction generateEnemy() {\n  enemies.push(new Enemy(Math.random() * gameBoard.offsetWidth));\n}\n\ndocument.getElementById(\"startGame\").addEventListener(\"click\", function() {\n  enemyInterval = setInterval(generateEnemy, 2000);\n});\n\ndocument.getElementById(\"pauseGame\").addEventListener('click', function() {\n  clearInterval(enemyInterval);\n  for (let tower of towers) {\n    clearInterval(tower.shootingInterval);\n  }\n});\n\ndocument.getElementById('resumeGame').addEventListener(\"click\", function() {\n  enemyInterval = setInterval(generateEnemy, 2000);\n  for (let tower of towers) {\n    tower.shootingInterval = setInterval(() => tower.shoot(), 1000);\n  }\n});\n\ngameBoard.addEventListener('click', placeTower);\n\n// Display Game Updates and Hide it when 'Close' is clicked\ndocument.getElementById('updateMenu').innerText = \"Game Updates: Towers can now shoot and enemies have health.\";\ndocument.getElementById('closeMenu').addEventListener('click', function() {\n  document.getElementById('updateMenu').style.display = 'none';\n});"
  },
  {
    "html": "<body>\n  <div id=\"gameBoard\"></div>\n  <div id=\"scorePanel\">\n      <span id=\"scoreBoard\">Score: 0</span>\n  </div>\n\n  <button id=\"startGame\">Start Game</button>\n  <button id=\"pauseGame\">Pause Game</button>\n  <button id=\"resumeGame\">Resume Game</button>\n  \n  <button id=\"updateButton\">Show Updates</button>\n  <div id=\"updateMenu\" class=\"hiddenMenu\">\n      <h2>Game Updates</h2>\n      <ul id=\"updates\"></ul>\n      <button id=\"closeMenu\">Close</button>\n  </div>\n</body>",
    "css": "#gameBoard {\n  width: 600px;\n  height: 600px;\n  border: 2px solid black;\n  position: relative;\n  margin: 20px auto;\n}\n\n#scorePanel {\n  display: flex;\n  justify-content: space-between;\n  width: 600px;\n  margin: 10px auto;\n  padding: 0 10px;\n  box-sizing: border-box;\n  background: white;\n  color: #444;\n}\n\n.hiddenMenu {\n  display: none;\n}\n\n.tower {\n  width: 30px;\n  height: 30px;\n  background-color: blue;\n  position: absolute;\n}\n\n.biggerTower {\n  width: 40px;\n  height: 40px;\n  background-color: purple;\n  position: absolute;\n}\n\n.projectile {\n  width: 5px;\n  height: 5px;\n  background-color: yellow;\n  position: absolute;\n}\n\n.enemy {\n  width: 30px;\n  height: 30px;\n  background-color: red;\n  position: absolute;\n}",
    "javascript": "class Tower {\n  constructor(left, top, isBiggerTower = false) {\n    this.left = left;\n    this.top = top;\n    this.isBiggerTower = isBiggerTower;\n    this.towerElement = document.createElement('div');\n    this.towerElement.classList.add(isBiggerTower ? 'biggerTower' : 'tower');\n    this.towerElement.style.left = `${this.left}px`;\n    this.towerElement.style.top = `${this.top}px`;\n    gameBoard.appendChild(this.towerElement);\n    this.shootingInterval = setInterval(() => this.shoot(), 1000);\n  }\n\n  shoot() {\n    for (let enemy of enemies) {\n      const distance = Math.sqrt(Math.pow(enemy.left - this.left, 2) + Math.pow(enemy.top - this.top, 2));\n      if(distance < (this.isBiggerTower ? 150 : 100)) {\n        // create projectile element\n        let projectile = document.createElement('div');\n        projectile.classList.add('projectile');\n        projectile.style.left = `${this.left}px`;\n        projectile.style.top = `${this.top}px`;\n        gameBoard.appendChild(projectile);\n        // animate it towards the enemy\n        let animation = setInterval(() => {\n          if(parseInt(projectile.style.left) < enemy.left){\n            projectile.style.left = `${parseInt(projectile.style.left) + 1}px`;\n          }\n          if(parseInt(projectile.style.top) < enemy.top){\n            projectile.style.top = `${parseInt(projectile.style.top) + 1}px`;\n          }\n        }, 0);\n        enemy.health -= 20;\n        if (enemy.health <= 0) {\n          enemy.enemyElement.remove();\n          enemies = enemies.filter(e => e !== enemy);\n          score += 10;\n          scoreBoard.textContent = `Score: ${score}`;\n        }\n      }\n    }\n  }\n}\n\nclass Enemy {\n  constructor(left){\n    this.left = left;\n    this.top = 0;\n    this.health = 100;\n    this.enemyElement = document.createElement('div');\n    this.enemyElement.classList.add('enemy');\n    this.enemyElement.style.left = `${this.left}px`;\n    gameBoard.appendChild(this.enemyElement);\n    this.moveEnemy = setInterval(() => this.move(), 20);\n  }\n\n  move() {\n    this.left += 1;\n    this.enemyElement.style.left = `${this.left}px`;\n    this.escape();\n  }\n\n  escape() {\n    if(this.left > gameBoard.offsetWidth) {\n      this.enemyElement.remove();\n      enemies = enemies.filter(e => e !== this);\n      score -= 20;\n      scoreBoard.textContent = `Score: ${score}`;\n    }\n  }\n}\n\nlet towers = [];\nlet enemies = [];\nlet enemyInterval;\nlet score=0;\nconst gameBoard = document.getElementById('gameBoard');\nconst scoreBoard = document.getElementById('scoreBoard');\n\nfunction placeTower(event) {\n  const rect = gameBoard.getBoundingClientRect();\n  const x = event.clientX - rect.left;\n  const y = event.clientY - rect.top;\n  if(event.shiftKey) {\n    towers.push(new Tower(x,y, true));\n  } else {\n    towers.push(new Tower(x,y));\n  }\n}\n\nfunction generateEnemy() {\n  enemies.push(new Enemy(Math.random() * gameBoard.offsetWidth));\n}\n\ndocument.getElementById(\"startGame\").addEventListener(\"click\", function() {\n  enemyInterval = setInterval(generateEnemy, 2000);\n});\n\ndocument.getElementById(\"pauseGame\").addEventListener('click', function() {\n  clearInterval(enemyInterval);\n  for (let tower of towers) {\n    clearInterval(tower.shootingInterval);\n  }\n});\n\ndocument.getElementById('resumeGame').addEventListener(\"click\", function() {\n  enemyInterval = setInterval(generateEnemy, 2000);\n  for (let tower of towers) {\n    tower.shootingInterval = setInterval(() => tower.shoot(), 1000);\n  }\n});\n\ngameBoard.addEventListener('click', placeTower);\n\ndocument.getElementById('updateButton').addEventListener('click', function() {\n  const updateMenu = document.getElementById('updateMenu');\n  updateMenu.style.display = 'block';\n  const updates = document.getElementById('updates');\n  updates.innerHTML = '<li>Towers can now shoot and enemies have health.</li><li>Shift + Click to place aoe towers.</li>'\n});\n\ndocument.getElementById('closeMenu').addEventListener('click', function() {\n  document.getElementById('updateMenu').style.display = 'none';\n});"
  },
  {
    "html": "<body>\n  <div id=\"gameBoard\"></div>\n  <div id=\"scorePanel\">\n      <span id=\"scoreBoard\">Score: 0</span>\n  </div>\n\n  <button id=\"startGame\">Start Game</button>\n  <button id=\"pauseGame\">Pause Game</button>\n  <button id=\"resumeGame\">Resume Game</button>\n  \n  <button id=\"updateButton\">Show Updates</button>\n  <div id=\"updateMenu\" class=\"hiddenMenu\">\n      <h2>Game Updates</h2>\n      <ul id=\"updates\"></ul>\n      <button id=\"closeMenu\">Close</button>\n  </div>\n</body>",
    "css": "#gameBoard {\n  width: 600px;\n  height: 600px;\n  border: 2px solid black;\n  position: relative;\n  margin: 20px auto;\n}\n\n#scorePanel {\n  display: flex;\n  justify-content: space-between;\n  width: 600px;\n  margin: 10px auto;\n  padding: 0 10px;\n  box-sizing: border-box;\n  background: white;\n  color: #444;\n}\n\n.hiddenMenu {\n  display: none;\n}\n\n.tower {\n  width: 30px;\n  height: 30px;\n  background-color: blue;\n  position: absolute;\n}\n\n.biggerTower {\n  width: 40px;\n  height: 40px;\n  background-color: purple;\n  position: absolute;\n}\n\n.projectile {\n  width: 5px;\n  height: 5px;\n  background-color: black;\n  position: absolute;\n}\n\n.enemy {\n  width: 30px;\n  height: 30px;\n  background-color: red;\n  position: absolute;\n}",
    "javascript": "class Tower {\n  constructor(left, top, isBiggerTower = false) {\n    this.left = left;\n    this.top = top;\n    this.isBiggerTower = isBiggerTower;\n    this.towerElement = document.createElement('div');\n    this.towerElement.classList.add(isBiggerTower ? 'biggerTower' : 'tower');\n    this.towerElement.style.left = `${this.left}px`;\n    this.towerElement.style.top = `${this.top}px`;\n    gameBoard.appendChild(this.towerElement);\n    this.shootingInterval = setInterval(() => this.shoot(), 1000);\n  }\n\n  shoot() {\n    let closestEnemy = enemies[0];\n    for (let enemy of enemies) {\n      const distance = Math.sqrt(Math.pow(enemy.left - this.left, 2) + Math.pow(enemy.top - this.top, 2));\n      const closestDistance = Math.sqrt(Math.pow(closestEnemy.left - this.left, 2) + Math.pow(closestEnemy.top - this.top, 2));\n      if(distance < closestDistance){\n        closestEnemy = enemy;\n      }\n    }\n\n    if(closestEnemy) {\n      let projectile = document.createElement('div');\n      projectile.classList.add('projectile');\n      projectile.style.left = `${this.left}px`;\n      projectile.style.top = `${this.top}px`;\n      gameBoard.appendChild(projectile);\n      \n      let animation = setInterval(() => {\n        if(parseInt(projectile.style.left) < closestEnemy.left){\n          projectile.style.left = `${parseInt(projectile.style.left) + 1}px`;\n        }\n        if(parseInt(projectile.style.top) < closestEnemy.top){\n          projectile.style.top = `${parseInt(projectile.style.top) + 1}px`;\n        }\n      }, 20);\n\n      closestEnemy.health -= this.isBiggerTower ? 40 : 20;\n      if (closestEnemy.health <= 0) {\n        closestEnemy.enemyElement.remove();\n        enemies = enemies.filter(e => e !== closestEnemy);\n        score += 10;\n        scoreBoard.textContent = `Score: ${score}`;\n      }\n    }\n  }\n}\n\nclass Enemy {\n  constructor(left){\n    this.left = 0;\n    this.top = Math.random() * gameBoard.offsetHeight;\n    this.health = 100;\n    this.enemyElement = document.createElement('div');\n    this.enemyElement.classList.add('enemy');\n    this.enemyElement.style.left = `${this.left}px`;\n    this.enemyElement.style.top = `${this.top}px`;\n    gameBoard.appendChild(this.enemyElement);\n    this.moveEnemy = setInterval(() => this.move(), 20);\n  }\n\n  move() {\n    this.left += 1;\n    this.enemyElement.style.left = `${this.left}px`;\n    this.escape();\n  }\n\n  escape() {\n    if(this.left > gameBoard.offsetWidth) {\n      this.enemyElement.remove();\n      enemies = enemies.filter(e => e !== this);\n      score -= 20;\n      scoreBoard.textContent = `Score: ${score}`;\n    }\n  }\n}\n\nlet towers = [];\nlet enemies = [];\nlet enemyInterval;\nlet score=0;\nconst gameBoard = document.getElementById('gameBoard');\nconst scoreBoard = document.getElementById('scoreBoard');\n\nfunction placeTower(event) {\n  const rect = gameBoard.getBoundingClientRect();\n  const x = event.clientX - rect.left;\n  const y = event.clientY - rect.top;\n  towers.push(new Tower(x, y, event.shiftKey));\n}\n\nfunction generateEnemy() {\n  enemies.push(new Enemy(Math.random() * gameBoard.offsetWidth));\n}\n\ndocument.getElementById(\"startGame\").addEventListener(\"click\", function() {\n  enemyInterval = setInterval(generateEnemy, 2000);\n});\n\ndocument.getElementById(\"pauseGame\").addEventListener('click', function() {\n  clearInterval(enemyInterval);\n  for (let tower of towers) {\n    clearInterval(tower.shootingInterval);\n  }\n});\n\ndocument.getElementById('resumeGame').addEventListener(\"click\", function() {\n  enemyInterval = setInterval(generateEnemy, 2000);\n  for (let tower of towers) {\n    tower.shootingInterval = setInterval(() => tower.shoot(), 1000);\n  }\n});\n\ngameBoard.addEventListener('click', placeTower);\n\ndocument.getElementById('updateButton').addEventListener('click', function() {\n  const updateMenu = document.getElementById('updateMenu');\n  updateMenu.style.display = 'block';\n  const updates = document.getElementById('updates');\n  updates.innerHTML = '<li>Changed the projectile color to black for better visibility.</li><li>The bullets now track the nearest enemy.</li><li>Shift + Click to place more powerful towers.</li>'\n});\n\ndocument.getElementById('closeMenu').addEventListener('click', function() {\n  document.getElementById('updateMenu').style.display = 'none';\n});"
  },
  {
    "html": "<body>\n  <div id=\"gameBoard\"></div>\n  <div id=\"scorePanel\">\n      <span id=\"scoreBoard\">Score: 0</span>\n  </div>\n\n  <button id=\"startGame\">Start Game</button>\n  <button id=\"pauseGame\">Pause Game</button>\n  <button id=\"resumeGame\">Resume Game</button>\n  \n  <button id=\"updateButton\">Show Updates</button>\n  <div id=\"updateMenu\" class=\"hiddenMenu\">\n      <h2>Game Updates</h2>\n      <ul id=\"updates\"></ul>\n      <button id=\"closeMenu\">Close</button>\n  </div>\n</body>",
    "css": "#gameBoard {\n  width: 600px;\n  height: 600px;\n  border: 2px solid black;\n  position: relative;\n  margin: 20px auto;\n}\n\n#scorePanel {\n  display: flex;\n  justify-content: space-between;\n  width: 600px;\n  margin: 10px auto;\n  padding: 0 10px;\n  box-sizing: border-box;\n  background: white;\n  color: #444;\n}\n\n.hiddenMenu {\n  display: none;\n}\n\n.tower {\n  width: 30px;\n  height: 30px;\n  background-color: blue;\n  position: absolute;\n}\n\n.biggerTower {\n  width: 40px;\n  height: 40px;\n  background-color: purple;\n  position: absolute;\n}\n\n.projectile {\n  width: 5px;\n  height: 5px;\n  background-color: black;\n  position: absolute;\n}\n\n.enemy {\n  width: 30px;\n  height: 30px;\n  background-color: red;\n  position: absolute;\n}",
    "javascript": "class Tower {\n  constructor(left, top, isBiggerTower = false) {\n    this.left = left;\n    this.top = top;\n    this.isBiggerTower = isBiggerTower;\n    this.towerElement = document.createElement('div');\n    this.towerElement.classList.add(isBiggerTower ? 'biggerTower' : 'tower');\n    this.towerElement.style.left = `${this.left}px`;\n    this.towerElement.style.top = `${this.top}px`;\n    gameBoard.appendChild(this.towerElement);\n    this.shootingInterval = setInterval(() => this.shoot(), 1000);\n  }\n\n  shoot() {\n    let closestEnemy = enemies[0];\n    let closestDistance = Infinity;\n    enemies.forEach(e => {\n      let distance = Math.hypot(e.left - this.left, e.top - this.top);\n      if (distance < closestDistance) {\n        closestEnemy = e;\n        closestDistance = distance;\n      }\n    });\n      \n    if (closestEnemy) {\n      let projectile = document.createElement('div');\n      projectile.classList.add('projectile');\n      projectile.style.left = `${this.left}px`;\n      projectile.style.top = `${this.top}px`;\n      gameBoard.appendChild(projectile);\n      \n      let shootUpdate = setInterval(() => {\n        let pathLeft = closestEnemy.left - parseInt(projectile.style.left),\n        pathTop = closestEnemy.top - parseInt(projectile.style.top),\n        distanceEnemy = Math.sqrt(pathTop*pathTop + pathLeft*pathLeft);\n                \n        projectile.style.left = `${parseInt(projectile.style.left) + pathLeft/distanceEnemy}px`;\n        projectile.style.top = `${parseInt(projectile.style.top) + pathTop/distanceEnemy}px`;\n                \n        if ((Math.abs(parseInt(projectile.style.left) - closestEnemy.left) < 1) && \n          (Math.abs(parseInt(projectile.style.top) - closestEnemy.top) < 1)) {\n            closestEnemy.health -= this.isBiggerTower ? 40 : 20;\n            projectile.remove();\n            clearInterval(shootUpdate);\n              \n            if (closestEnemy.health <= 0) {\n              closestEnemy.enemyElement.remove();\n              enemies = enemies.filter(e => e !== closestEnemy);\n              score ++;\n              scoreBoard.textContent = `Score: ${score}`;\n            }\n\n        }\n      }, 20);\n    }\n  }\n}\n\nclass Enemy {\n  constructor() {\n    this.left = 0;\n    this.top = Math.random() * (gameBoard.clientHeight - 30);\n    this.health = 100;\n    this.enemyElement = document.createElement('div');\n    this.enemyElement.classList.add('enemy');\n    this.enemyElement.style.left = `${this.left}px`;\n    this.enemyElement.style.top = `${this.top}px`;\n    gameBoard.appendChild(this.enemyElement);\n    this.moveEnemy = setInterval(() => this.move(), 20);\n  }\n\n  move() {\n    this.left += 1;\n    this.enemyElement.style.left = `${this.left}px`;\n    if (this.left > gameBoard.clientWidth) {\n      this.enemyElement.remove();\n      enemies = enemies.filter(e => e !== this);\n      clearInterval(this.moveEnemy);\n    }\n  }\n}\n\nlet towers = [];\nlet enemies = [];\nlet enemyInterval;\nlet score= 0;\nconst gameBoard = document.getElementById('gameBoard');\nconst scoreBoard = document.getElementById('scoreBoard');\n\nfunction placeTower(event) {\n  let x = event.clientX - gameBoard.offsetLeft,\n      y = event.clientY - gameBoard.offsetTop;\n  towers.push(new Tower(x, y, event.shiftKey));\n}\n\nfunction generateEnemy() {\n  enemies.push(new Enemy());\n}\n\ndocument.getElementById(\"startGame\").addEventListener(\"click\", function() {\n  enemyInterval = setInterval(generateEnemy, 2000);\n  for (let tower of towers) {\n    tower.shootingInterval = setInterval(() => tower.shoot(), 1000);\n  }\n});\n\ndocument.getElementById(\"pauseGame\").addEventListener('click', function() {\n  clearInterval(enemyInterval);\n  for (let tower of towers) {\n    clearInterval(tower.shootingInterval);\n  }\n});\n\ndocument.getElementById('resumeGame').addEventListener(\"click\", function() {\n  enemyInterval = setInterval(generateEnemy, 2000);\n  for (let tower of towers) {\n    tower.shootingInterval = setInterval(() => tower.shoot(), 1000);\n  }\n});\n\ngameBoard.addEventListener('click', placeTower);\n\ndocument.getElementById('updateButton').addEventListener('click', function() {\n  const updateMenu = document.getElementById('updateMenu');\n  updateMenu.style.display = 'block';\n  const updates = document.getElementById('updates');\n  updates.innerHTML = '<li>Changed the projectile color to black for better visibility.</li><li>The bullets now track the nearest enemy.</li><li>Shift + Click to place more powerful towers.</li>'\n});\n\ndocument.getElementById('closeMenu').addEventListener('click', function() {\n  document.getElementById('updateMenu').style.display = 'none';\n});"
  }
]